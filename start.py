"""一个将多语言表格转化为 Android string.xml 以及 iOS Localizable.strings 的脚本2018.10.25 新增支持将新增多语言直接写入 iOS 或 Android 项目的多语言文件使用方法参考 GitHub ReadMeAuthor: YangJiachengGithub : https://github.com/caelanyang/XlsToXmlDate: 2017.12"""from optparse import OptionParserfrom importlib import reloadimport sysimport xlrdimport osdef add_parser():    parser = OptionParser()    parser.add_option("-f", "--file_path",                      help="original.xls File Path.",                      metavar="file_path", type=str)    parser.add_option("-t", "--target_path",                      help="Target Folder Path.",                      metavar="target_path", type=str)    parser.add_option("-w", "--mobile_os",                      help="Target Mobile OS, 0 is iOS and 1 is Android.",                      metavar="mobile_os", type=int, default=-1)    (options, args) = parser.parse_args()    print("options: %s, args: %s" % (options, args))    return optionsdef start_convert(options):    file_path = options.file_path    target_path = options.target_path    write_model = options.mobile_os    if file_path is not None:        if target_path is None:            print("targetPath is None！use -h for help.")            return        print("read xls file from: " + file_path)        xls_file = XlsUtil(file_path)        table = xls_file.get_table_by_index(0)        convert_file(table, target_path, write_model)        print("Finished, see: " + target_path)    else:        print().error("file path is None！use -h for help.")def convert_file(table, target_path, write_model):    first_row = table.row_values(0)    keys = table.col_values(0)    del keys[0]    for index in range(len(first_row)):        if index > 0:            language_name = first_row[index]            values = table.col_values(index)            del values[0]            write_to_file(keys, values, target_path, language_name, write_model)def write_to_file(keys, values, target_path, language_name, write_model):    if not os.path.exists(target_path):        os.makedirs(target_path)    if language_name is not None:        if write_model == 0:            write_to_ios_project(keys, values, target_path, language_name)        elif write_model == 1:            write_to_android_project(keys, values, target_path, language_name)        else:            write_to_common_for_android_ios(keys, values, target_path, language_name)# 同时生成Android strings.xml 与 iOS 的 Localizable.stringsdef write_to_common_for_android_ios(keys, values, target_path, language_name):    print("reading language for: " + language_name + " to " + target_path)    fo_for_android = open(target_path + "/strings.xml", "a", encoding="utf8")    fo_for_ios = open(target_path + "/Localizable.strings", "a", encoding="utf8")    if language_name is not None:        fo_for_android.write(language_name + "\n")        fo_for_ios.write(language_name + "\n")        for x in range(len(keys)):            if values[x] is None or values[x] == '':                print("Key:" + keys[x] + "\'s value is None. Index:" + str(x + 1))                continue            key = keys[x]            value = values[x]            if ~isinstance(value, str):                value = str(value)            if ~isinstance(key, str):                key = str(key)            key.strip()            content = "<string name=\"" + key + "\">" + value + "</string>\n"            content_for_ios = "\"" + key + "\" " + "= " + "\"" + value + "\";\n"            fo_for_android.write(content)            fo_for_ios.write(content_for_ios)        fo_for_android.write("\n")        fo_for_android.close()        fo_for_ios.write("\n")        fo_for_ios.close()# 直接写入 iOS 项目中的的多语言文件，没有对应的文件则创建def write_to_ios_project(keys, values, target_path, language_name):    language_path = language_name + ".lproj" + "/Localizable.strings"    project_path = target_path + "/" + language_path    check_project_language_path(project_path)    print("reading language for: " + language_name + " to " + project_path)    fo_for_ios = open(project_path, "a", encoding="utf8")    fo_for_ios.write("\n")    for x in range(len(keys)):        if values[x] is None or values[x] == '':            print("Key:" + keys[x] + "\'s value is None. Index:" + str(x + 1))            continue        key = keys[x]        value = values[x]        if ~isinstance(value, str):            value = str(value)        if ~isinstance(key, str):            key = str(key)        key.strip()        content_for_ios = "\"" + key + "\" " + "= " + "\"" + value + "\";\n"        fo_for_ios.write(content_for_ios)    fo_for_ios.write("\n")    fo_for_ios.close()# 直接写入 Android 项目中的的多语言文件，没有对应的文件则创建def write_to_android_project(keys, values, target_path, language_name):    if language_name == "en":        language_path = "values" + "/strings.xml"    else:        language_path = "values-" + language_name + "/strings.xml"    project_path = target_path + "/" + language_path    new_file = check_project_language_path(project_path)    print("reading language for: " + language_name + " to " + project_path)    fo_for_android = open(project_path, "a", encoding="utf8")    if new_file:        fo_for_android.write('<?xml version="1.0" encoding="utf-8" standalone="no"?> \n')        fo_for_android.write("<resources>")    else:        read_temp = open(project_path, "r", encoding="utf8")        lines = read_temp.readlines()        read_temp.close()        lines = lines[:-1]        temp = open(project_path, "w", encoding="utf8")        temp.writelines(lines)        temp.close()    fo_for_android.write("\n")    for x in range(len(keys)):        if values[x] is None or values[x] == '':            print("Key:" + keys[x] + "\'s value is None. Index:" + str(x + 1))            continue        key = keys[x]        value = values[x]        if ~isinstance(value, str):            value = str(value)        if ~isinstance(key, str):            key = str(key)        key.strip()        content = "<string name=\"" + key + "\">" + value + "</string>\n"        content = "    " + content        fo_for_android.write(content)    fo_for_android.write("\n")    fo_for_android.write("</resources>")    fo_for_android.close()def check_project_language_path(path):    new_file = False    dir_path = os.path.split(path)[0]    if not os.path.exists(dir_path):        os.makedirs(dir_path)        new_file = True    if not os.path.exists(path):        os.system(r"touch {}".format(path))    return new_fileclass XlsUtil:    def __init__(self, file_path):        self.filePath = file_path        reload(sys)        self.data = xlrd.open_workbook(file_path)    def get_table_by_index(self, index):        if 0 <= index < len(self.data.sheets()):            return self.data.sheets()[index]        else:            print("XlsUtil error -- getTable: " + index)def main():    options = add_parser()    start_convert(options)main()